"use strict"
module.change_code=1;
var localUrl = "http://localhost:4000";
var dataTableName = "flashcardData";

var localCredentials = {
	region:"us-east-1",
	accessKeyId:"fake",
	secretAccessKey:"fake"
};
var localDynasty = require('Dynasty')(localCredentials, localUrl), 
dynasty = localDynasty

function DatabaseHelper() {
}

var flashcardTable = function() {
	return dynasty.table(dataTableName)
};

DatabaseHelper.prototype.createFlashcardData = function() {
	return dynasty.describe(dataTableName)
		.catch(function(error) {
			console.log("createFlashcardData::error: ", error);
			return dynasty.create(dataTableName, {
				key_schema: {
					hash: ["vocabularyIndex", "vocabularyWord" ]
				}
			})
		})
}

DatabaseHelper.prototype.storeFlashcardData = function(vocabularyIndex, wordInput) {
	console.log("Writing FlashcardData with index of" + vocabularyIndex);
	return flashcardTable().insert({
		vocabularyIndex: vocabularyIndex,
		vocabularyWord: JSON.stringify(wordInput)
	}).catch(function(error) {
		console.log(error);
	})
}

DatabaseHelper.prototype.readFlashcardData = function(vocabularyIndex) {
	console.log("Reading FlashcardData with a user index of " + vocabularyIndex);
	return flashcardTable().find(vocabularyIndex)
		.then(function(result) {
			var data = (result === undefined ? {} : JSON.parse(result["data"]));
			return new data;
		}).catch(function(error) {
			console.log(error)
		})
}


module.exports = DatabaseHelper;
